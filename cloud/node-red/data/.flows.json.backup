[{"id":"92042de7f77235d1","type":"tab","label":"Flux 1","disabled":false,"info":"","env":[]},{"id":"e3f06e9735d32e5d","type":"tab","label":"NodeRed_Projet","disabled":false,"info":"","env":[]},{"id":"e81d1304f9f3bda1","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":2,"width":1,"height":1},{"id":"3a1dcb773a78d750","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":3,"width":1,"height":1},{"id":"f92e02415e3201f2","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":4,"width":1,"height":1},{"id":"c01e3cca4ba12a2d","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":5,"width":1,"height":1},{"id":"99cfbc2270e12d98","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":6,"width":1,"height":1},{"id":"f1035c30b4e154eb","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":7,"width":1,"height":1},{"id":"d38a2b9a755835b5","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":8,"width":1,"height":1},{"id":"73153081daadebfe","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":9,"width":1,"height":1},{"id":"f76445901ab02554","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":10,"width":1,"height":1},{"id":"3ed3d0f974819569","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":11,"width":1,"height":1},{"id":"a4a7bb59ea7eba94","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":12,"width":1,"height":1},{"id":"aa6ab78143974f8f","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":13,"width":1,"height":1},{"id":"a5f7d6e919ae1415","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":14,"width":1,"height":1},{"id":"909a639db42f84a8","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":15,"width":1,"height":1},{"id":"3017a945fbd77863","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":16,"width":1,"height":1},{"id":"97877f2f42455835","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"f3f3d72da8e0a0a6","order":17,"width":1,"height":1},{"id":"5ba7f60809348175","type":"influxdb","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"database","name":"my_influxdb","usetls":false,"tls":"","influxdbVersion":"2.0","url":"http://localhost:8086","timeout":"10","rejectUnauthorized":true},{"id":"33b40955f4d4b92f","type":"ui_tab","name":"Stats","icon":"data_usage","order":2,"disabled":false,"hidden":false},{"id":"a309c8a19ab42cb2","type":"ui_tab","name":"Map","icon":"map","order":3,"disabled":false,"hidden":false},{"id":"b5640878e8218e75","type":"ui_group","name":"Light Detector","tab":"33b40955f4d4b92f","order":1,"disp":true,"width":"8","collapse":false,"className":""},{"id":"234b79cc97402da8","type":"ui_group","name":"","tab":"a309c8a19ab42cb2","order":1,"disp":false,"width":30,"collapse":false,"className":""},{"id":"6d85d11fa4458ead","type":"ui_group","name":"Accelerometer","tab":"33b40955f4d4b92f","order":2,"disp":true,"width":14,"collapse":false,"className":""},{"id":"add2dd79f12b4e99","type":"ui_group","name":"Alert Detector","tab":"33b40955f4d4b92f","order":3,"disp":true,"width":"8","collapse":false,"className":""},{"id":"583925e9774bb5c8","type":"ui_group","name":"Light Settings","tab":"33b40955f4d4b92f","order":4,"disp":true,"width":"14","collapse":false,"className":""},{"id":"70d6ad67e5fd1f60","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"234b79cc97402da8","order":2,"width":6,"height":1},{"id":"524884ec5d67b03c","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"234b79cc97402da8","order":6,"width":6,"height":1},{"id":"e817e3cf88efa886","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"234b79cc97402da8","order":8,"width":6,"height":1},{"id":"3f613fa89d1f30f5","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"234b79cc97402da8","order":10,"width":6,"height":1},{"id":"4cc18bee72bc190a","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"234b79cc97402da8","order":11,"width":6,"height":1},{"id":"4428f4df2933bb2e","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":4,"width":1,"height":1},{"id":"d94eeca9479201bb","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":6,"width":1,"height":1},{"id":"795183783be2c614","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":7,"width":1,"height":1},{"id":"44b38bf52c837d3a","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":8,"width":1,"height":1},{"id":"532e093b237e46ef","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":9,"width":1,"height":1},{"id":"347500591f37dc77","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":11,"width":1,"height":1},{"id":"4f0b564e42faf20f","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":12,"width":1,"height":1},{"id":"61db4f94726ed2bc","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":13,"width":1,"height":1},{"id":"55764a8f7f1977fe","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":14,"width":1,"height":1},{"id":"d7912a52f96c1eb3","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":16,"width":1,"height":1},{"id":"863be89b4a19419f","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":17,"width":1,"height":1},{"id":"962e675d3465d5d7","type":"ui_spacer","z":"e3f06e9735d32e5d","name":"spacer","group":"b5640878e8218e75","order":18,"width":1,"height":1},{"id":"56f3b6aee9dfd988","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"ws_config","type":"websocket-client","path":"ws://localhost:5000","tls":"","wholemsg":"false"},{"id":"f2fbea9c78fb04ef","type":"websocket-listener","path":"ws://localhost:8765","wholemsg":"false"},{"id":"a7a38a2626b6e978","type":"http in","z":"92042de7f77235d1","name":"","url":"/app/alerte/:alertMessage","method":"get","upload":false,"swaggerDoc":"","x":216,"y":159,"wires":[["c63eab368704c7f4"]]},{"id":"c63eab368704c7f4","type":"function","z":"92042de7f77235d1","name":"function alert DB","func":"// Obtenir la date et l'heure actuelles\nlet now = new Date();\n\n// Formater la date en \"MM/dd/yyyy hh:mm:ss a\"\nlet formattedDate = formatDate(now);\n\n// Créer le message à envoyer à InfluxDB\nmsg.payload = {\n    alertMessage: String(msg.req.params.alertMessage),  // Message d'alerte reçu\n    timestamp: formattedDate  // Date actuelle\n};\n\nreturn msg;\n\n// Fonction pour formater la date\nfunction formatDate(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let seconds = date.getSeconds();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // Ajuster pour afficher 12 au lieu de 0\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n\n    let month = (date.getMonth() + 1).toString().padStart(2, '0'); // Mois commencent à 0\n    let day = date.getDate().toString().padStart(2, '0');\n    let year = date.getFullYear();\n\n    return `${month}/${day}/${year} ${hours}:${minutes}:${seconds} ${ampm}`;\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":546,"y":159,"wires":[["6e9b1d2a3c4d4bf0"]]},{"id":"6e9b1d2a3c4d4bf0","type":"influxdb out","z":"92042de7f77235d1","influxdb":"5ba7f60809348175","name":"","measurement":"testAlert2","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"StevenEssam","bucket":"testBD","x":896,"y":159,"wires":[]},{"id":"9c984646c68dbe5e","type":"comment","z":"92042de7f77235d1","name":"Alert Message","info":"","x":126,"y":99,"wires":[]},{"id":"inject_pot","type":"inject","z":"92042de7f77235d1","name":"Potentiometer Input","props":[{"p":"payload"}],"repeat":"1","once":true,"topic":"","payload":"50","payloadType":"num","x":466.8125114440918,"y":364.0000066757202,"wires":[["switch_pot"]]},{"id":"switch_pot","type":"switch","z":"92042de7f77235d1","name":"Check Pot Value","property":"payload","propertyType":"msg","rules":[{"t":"lte","v":"100","vt":"num"},{"t":"gt","v":"100","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":666.8125114440918,"y":364.0000066757202,"wires":[["change_green"],["change_red"]]},{"id":"change_green","type":"change","z":"92042de7f77235d1","name":"LED Green","rules":[{"t":"set","p":"payload","pt":"msg","to":"green","tot":"str"}],"x":873.8125152587891,"y":299.0000057220459,"wires":[["ui_led"]]},{"id":"change_red","type":"change","z":"92042de7f77235d1","name":"LED Red","rules":[{"t":"set","p":"payload","pt":"msg","to":"red","tot":"str"}],"x":874.8125762939453,"y":458.0000057220459,"wires":[["ui_led"]]},{"id":"ui_led","type":"ui_led","z":"92042de7f77235d1","order":1,"group":"group_1","width":"","height":"","label":"Potentiometer LED","colorForValue":[{"color":"#008000","value":"green","valueType":"str"},{"color":"#ff0000","value":"red","valueType":"str"}],"allowColorForValueInMessage":true,"shape":"circle","showGlow":true,"name":"LED","x":1222.8124465942383,"y":370.00000381469727,"wires":[]},{"id":"ui_text","type":"ui_text","z":"92042de7f77235d1","group":"group_1","order":2,"width":6,"height":1,"name":"Potentiometer Value","label":"Potentiometer Value","format":"{{msg.payload}}","layout":"row-spread","x":906.8125152587891,"y":363.00003719329834,"wires":[]},{"id":"button","type":"ui_button","z":"92042de7f77235d1","name":"Send Request Button","group":"group_1","order":1,"width":6,"height":1,"passthru":false,"label":"Envoyer Requête","tooltip":"","color":"","bgcolor":"","className":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":466.8125114440918,"y":364.0000066757202,"wires":[["http_request"]]},{"id":"http_request","type":"http request","z":"92042de7f77235d1","name":"HTTP Request","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://jsonplaceholder.typicode.com/posts/1","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":666.8125114440918,"y":364.0000066757202,"wires":[["ui_text"]]},{"id":"websocket_in","type":"websocket in","z":"92042de7f77235d1","name":"WebSocket Receive","server":"f2fbea9c78fb04ef","client":"","x":480.0125617980957,"y":596.8126411437988,"wires":[["debug_node"]]},{"id":"websocket_out","type":"websocket out","z":"92042de7f77235d1","name":"WebSocket Send","server":"f2fbea9c78fb04ef","client":"","x":762.012622833252,"y":721.8127002716064,"wires":[]},{"id":"inject_node","type":"inject","z":"92042de7f77235d1","name":"Send Message","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"Hello WebSocket!","payloadType":"str","x":480.0125846862793,"y":722.8126401901245,"wires":[["websocket_out"]]},{"id":"debug_node","type":"debug","z":"92042de7f77235d1","name":"Debug Message","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":680.0125617980957,"y":596.8126411437988,"wires":[]},{"id":"0414ce3d1d9a869f","type":"function","z":"e3f06e9735d32e5d","name":"function gps","func":"msg.payload = {\n    lat: Number(msg.req.params.latitude),\n    lon: Number(msg.req.params.longitude),\n    name: \"MyDevice\",\n};\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":400,"wires":[["788e11207099a70b"]]},{"id":"5d683a148f3463df","type":"http in","z":"e3f06e9735d32e5d","name":"","url":"/app/gps/:latitude/:longitude/:speed","method":"get","upload":false,"swaggerDoc":"","x":230,"y":440,"wires":[["0414ce3d1d9a869f","85e4f6060d1a9292"]]},{"id":"788e11207099a70b","type":"influxdb out","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","measurement":"testgps2","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"StevenEssam","bucket":"testBD","x":840,"y":420,"wires":[]},{"id":"8938f28c548c63e1","type":"http in","z":"e3f06e9735d32e5d","name":"","url":"/app/light/:light","method":"get","upload":false,"swaggerDoc":"","x":170,"y":180,"wires":[["e31d22b839a3583c"]]},{"id":"e31d22b839a3583c","type":"function","z":"e3f06e9735d32e5d","name":"function light","func":"msg.payload = Number(msg.req.params.light);\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":180,"wires":[["39cecae2dc6fb641"]]},{"id":"39cecae2dc6fb641","type":"influxdb out","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","measurement":"testlight2","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"StevenEssam","bucket":"testBD","x":740,"y":180,"wires":[]},{"id":"a6a2586ba301c5a9","type":"influxdb out","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","measurement":"testAccelometre2","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"StevenEssam","bucket":"testBD","x":1090,"y":860,"wires":[]},{"id":"137321f9e4fc986c","type":"function","z":"e3f06e9735d32e5d","name":"function accelerometer data to DB","func":"msg.payload = {\n    xAccel: Number(msg.req.params.xAccel),\n    yAccel: Number(msg.req.params.yAccel),\n    zAccel: Number(msg.req.params.zAccel)\n};\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":680,"y":860,"wires":[["a6a2586ba301c5a9"]]},{"id":"6d1fad376aa3bb01","type":"http in","z":"e3f06e9735d32e5d","name":"","url":"/app/accelerometer/:xAccel/:yAccel/:zAccel","method":"get","upload":false,"swaggerDoc":"","x":260,"y":860,"wires":[["137321f9e4fc986c"]]},{"id":"0ee00a9fc75704e7","type":"ui_gauge","z":"e3f06e9735d32e5d","name":"","group":"b5640878e8218e75","order":1,"width":8,"height":6,"gtype":"wave","title":"Light Level","label":"","format":"{{msg.payload | number:1}}","min":"0","max":"300","colors":["#4da3ff","#d600e6","#ff8800"],"seg1":"","seg2":"","diff":false,"className":"","x":1290,"y":240,"wires":[]},{"id":"432edb2e80efa19b","type":"ui_worldmap","z":"e3f06e9735d32e5d","group":"234b79cc97402da8","order":1,"width":24,"height":15,"name":"Location Map","lat":"","lon":"","zoom":"18","layer":"OSMC","cluster":"","maxage":"","usermenu":"hide","layers":"hide","panit":"true","panlock":"false","zoomlock":"false","hiderightclick":"true","coords":"none","showgrid":"false","showruler":"false","allowFileDrop":"false","path":"/worldmap","overlist":"DR,CO,RA,DN,HM","maplist":"OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS","mapname":"","mapurl":"","mapopt":"","mapwms":false,"x":1300,"y":600,"wires":[]},{"id":"85e4f6060d1a9292","type":"function","z":"e3f06e9735d32e5d","name":"function speed","func":"msg.payload = Number(msg.req.params.speed);\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":460,"wires":[["788e11207099a70b"]]},{"id":"99545f9202279ccd","type":"ui_gauge","z":"e3f06e9735d32e5d","name":"Speed Level","group":"234b79cc97402da8","order":9,"width":6,"height":4,"gtype":"gage","title":"Speed","label":"Speed","format":"{{msg.payload.lastSpeed | number:1}}","min":"0","max":"30","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","diff":false,"className":"","x":1290,"y":700,"wires":[]},{"id":"8206fcf964652fa4","type":"ui_chart","z":"e3f06e9735d32e5d","name":"","group":"6d85d11fa4458ead","order":1,"width":14,"height":7,"label":"Accelerometer Status","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1320,"y":960,"wires":[[]]},{"id":"63372a236c469315","type":"http in","z":"e3f06e9735d32e5d","name":"","url":"/app/alerte/:alertMessage","method":"get","upload":false,"swaggerDoc":"","x":200,"y":1120,"wires":[["fbf72e5c2eb7271f"]]},{"id":"fbf72e5c2eb7271f","type":"function","z":"e3f06e9735d32e5d","name":"function alert DB","func":"// Obtenir la date et l'heure actuelles\nlet now = new Date();\n\n// Formater la date en \"MM/dd/yyyy hh:mm:ss a\"\nlet formattedDate = formatDate(now);\n\n// Créer le message à envoyer à InfluxDB\nmsg.payload = {\n    alertMessage: String(msg.req.params.alertMessage),  // Message d'alerte reçu\n    timestamp: formattedDate  // Date actuelle\n};\n\nreturn msg;\n\n// Fonction pour formater la date\nfunction formatDate(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let seconds = date.getSeconds();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // Ajuster pour afficher 12 au lieu de 0\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n\n    let month = (date.getMonth() + 1).toString().padStart(2, '0'); // Mois commencent à 0\n    let day = date.getDate().toString().padStart(2, '0');\n    let year = date.getFullYear();\n\n    return `${month}/${day}/${year} ${hours}:${minutes}:${seconds} ${ampm}`;\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":1120,"wires":[["5cf546e6baa02cf7"]]},{"id":"5cf546e6baa02cf7","type":"influxdb out","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","measurement":"testAlert2","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"StevenEssam","bucket":"testBD","x":880,"y":1120,"wires":[]},{"id":"f8bd97143f13a8df","type":"ui_table","z":"e3f06e9735d32e5d","group":"add2dd79f12b4e99","name":"Alert Table","order":6,"width":8,"height":6,"columns":[],"outputs":0,"cts":false,"x":1290,"y":1200,"wires":[]},{"id":"b1ecefb4e3c9602c","type":"ui_led","z":"e3f06e9735d32e5d","order":2,"group":"add2dd79f12b4e99","width":8,"height":4,"label":"","labelPlacement":"right","labelAlignment":"center","colorForValue":[{"color":"#00eb2f","value":"true","valueType":"bool"},{"color":"#ff0000","value":"red","valueType":"str"},{"color":"#ffff00","value":"yellow","valueType":"str"},{"color":"#0000ff","value":"false","valueType":"bool"}],"allowColorForValueInMessage":false,"shape":"circle","showGlow":true,"name":"Alert Led","x":1280,"y":1240,"wires":[]},{"id":"a492a5b16897d4c6","type":"ui_text","z":"e3f06e9735d32e5d","group":"add2dd79f12b4e99","order":3,"width":8,"height":1,"name":"Alert Message","label":"","format":"{{msg.payload}}","layout":"col-center","className":"","style":true,"font":"","fontSize":"25","color":"#ff0000","x":1300,"y":1280,"wires":[]},{"id":"0d48169b5f38b0e7","type":"ui_text","z":"e3f06e9735d32e5d","group":"add2dd79f12b4e99","order":1,"width":8,"height":1,"name":"","label":"Alert Status","format":"","layout":"col-center","className":"","style":true,"font":"","fontSize":"20","color":"#ffffff","x":1330,"y":1560,"wires":[]},{"id":"ded14174eecdca48","type":"ui_text","z":"e3f06e9735d32e5d","group":"234b79cc97402da8","order":7,"width":6,"height":2,"name":"","label":"Longitude","format":"{{msg.payload.lon}}","layout":"col-center","className":"","style":true,"font":"","fontSize":"25","color":"#ffffff","x":1280,"y":560,"wires":[]},{"id":"a3e509bc36a7de37","type":"ui_text","z":"e3f06e9735d32e5d","group":"234b79cc97402da8","order":5,"width":6,"height":2,"name":"","label":"Latitude","format":"{{msg.payload.lat}}","layout":"col-center","className":"","style":true,"font":"","fontSize":"25","color":"#ffffff","x":1280,"y":520,"wires":[]},{"id":"4304d1fc9d55130e","type":"ui_text","z":"e3f06e9735d32e5d","group":"234b79cc97402da8","order":3,"width":6,"height":1,"name":"","label":"My Location <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>","format":"","layout":"col-center","className":"","style":true,"font":"","fontSize":"35","color":"#228bec","x":1490,"y":1640,"wires":[]},{"id":"daa36ac0340cc62f","type":"ui_led","z":"e3f06e9735d32e5d","order":5,"group":"b5640878e8218e75","width":6,"height":2,"label":"Morning","labelPlacement":"left","labelAlignment":"left","colorForValue":[{"color":"#ffa500","value":"morning","valueType":"str"},{"color":"#808080","value":"false","valueType":"bool"}],"allowColorForValueInMessage":false,"shape":"circle","showGlow":true,"name":"Morning led","x":1290,"y":280,"wires":[]},{"id":"3495c529eedab969","type":"ui_led","z":"e3f06e9735d32e5d","order":10,"group":"b5640878e8218e75","width":6,"height":2,"label":"Night","labelPlacement":"left","labelAlignment":"left","colorForValue":[{"color":"#00e1ff","value":"night","valueType":"str"},{"color":"#808080","value":"false","valueType":"bool"}],"allowColorForValueInMessage":false,"shape":"circle","showGlow":true,"name":"Night led","x":1280,"y":320,"wires":[]},{"id":"874c7558426dc0b3","type":"ui_led","z":"e3f06e9735d32e5d","order":15,"group":"b5640878e8218e75","width":6,"height":2,"label":"Unknown","labelPlacement":"left","labelAlignment":"left","colorForValue":[{"color":"#ee82ee","value":"unknown","valueType":"str"},{"color":"#808080","value":"false","valueType":"bool"}],"allowColorForValueInMessage":false,"shape":"circle","showGlow":true,"name":"Unknown led","x":1290,"y":360,"wires":[]},{"id":"880ca2a7fcf8d4bc","type":"ui_text","z":"e3f06e9735d32e5d","group":"b5640878e8218e75","order":3,"width":8,"height":1,"name":"","label":"Time of day","format":"","layout":"col-center","className":"","style":true,"font":"","fontSize":"25","color":"#ffffff","x":1330,"y":1800,"wires":[]},{"id":"e3a1635b8e6b3628","type":"ui_text","z":"e3f06e9735d32e5d","group":"b5640878e8218e75","order":2,"width":8,"height":1,"name":"","label":"▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰","format":"","layout":"col-center","className":"","style":false,"font":"","fontSize":16,"color":"#000000","x":1410,"y":1680,"wires":[]},{"id":"7ffaf6da6b54662a","type":"ui_text","z":"e3f06e9735d32e5d","group":"add2dd79f12b4e99","order":4,"width":8,"height":1,"name":"","label":"▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰","format":"","layout":"col-center","className":"","style":false,"font":"","fontSize":16,"color":"#000000","x":1410,"y":1760,"wires":[]},{"id":"67c5db288bbde1b9","type":"ui_text","z":"e3f06e9735d32e5d","group":"add2dd79f12b4e99","order":5,"width":8,"height":1,"name":"","label":"List of Alerts","format":"","layout":"col-center","className":"","style":true,"font":"","fontSize":"25","color":"#ffffff","x":1330,"y":1720,"wires":[]},{"id":"75d2062f8d28cb37","type":"ui_text","z":"e3f06e9735d32e5d","group":"234b79cc97402da8","order":4,"width":6,"height":1,"name":"","label":"▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰","format":"","layout":"col-center","className":"","style":false,"font":"","fontSize":16,"color":"#000000","x":1410,"y":1600,"wires":[]},{"id":"cd7c8a2133fd3c1e","type":"ui_slider","z":"e3f06e9735d32e5d","d":true,"name":"","label":"Morning Threshold","tooltip":"","group":"583925e9774bb5c8","order":2,"width":11,"height":1,"passthru":true,"outs":"all","topic":"topic","topicType":"msg","min":"0","max":"1000","step":1,"className":"","x":190,"y":1620,"wires":[["b96236640826941f"]]},{"id":"b96236640826941f","type":"function","z":"e3f06e9735d32e5d","d":true,"name":"Set Morning Threshold","func":"flow.set('morningThreshold', msg.payload);\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":480,"y":1620,"wires":[["cc53123739e8c353"]]},{"id":"7b5c6349fefbce79","type":"function","z":"e3f06e9735d32e5d","d":true,"name":"Set Night Threshold","func":"flow.set('nightThreshold', msg.payload);\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":1660,"wires":[["d6d0246fb2098b9e"]]},{"id":"5dc9fd9449c7568e","type":"ui_slider","z":"e3f06e9735d32e5d","d":true,"name":"","label":"Night Threshold","tooltip":"","group":"583925e9774bb5c8","order":4,"width":11,"height":1,"passthru":true,"outs":"all","topic":"topic","topicType":"msg","min":0,"max":"1000","step":1,"className":"","x":180,"y":1660,"wires":[["7b5c6349fefbce79"]]},{"id":"f84bdc2424bcb7a9","type":"ui_text","z":"e3f06e9735d32e5d","d":true,"group":"583925e9774bb5c8","order":3,"width":3,"height":1,"name":"","label":"","format":"{{msg.payload}} > Night","layout":"col-center","className":"","style":false,"font":"","fontSize":16,"color":"#000000","x":910,"y":1620,"wires":[]},{"id":"e67bbd8b0a5ed0ef","type":"ui_text","z":"e3f06e9735d32e5d","d":true,"group":"583925e9774bb5c8","order":5,"width":3,"height":1,"name":"","label":"","format":"{{msg.payload}} < Morning","layout":"col-center","className":"","style":false,"font":"","fontSize":16,"color":"#000000","x":910,"y":1660,"wires":[]},{"id":"4d04b78c83a0d22e","type":"inject","z":"e3f06e9735d32e5d","d":true,"name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"num","x":530,"y":1580,"wires":[["cc53123739e8c353"]]},{"id":"14100d0882588f86","type":"inject","z":"e3f06e9735d32e5d","d":true,"name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"num","x":530,"y":1700,"wires":[["d6d0246fb2098b9e"]]},{"id":"d6d0246fb2098b9e","type":"function","z":"e3f06e9735d32e5d","d":true,"name":"Get Night Threshold","func":"let nightThreshold = flow.get('nightThreshold') || 100;  // Default to 100 if not set\nmsg.payload = nightThreshold;  // Set the value to the message payload\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":1660,"wires":[["e67bbd8b0a5ed0ef"]]},{"id":"cc53123739e8c353","type":"function","z":"e3f06e9735d32e5d","d":true,"name":"Get Morning Threshold","func":"let morningThreshold = flow.get('morningThreshold') || 300;  // Default to 300 if not set\nmsg.payload = morningThreshold;  // Set the value to the message payload\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":1620,"wires":[["f84bdc2424bcb7a9"]]},{"id":"32ad366c6eb8e095","type":"comment","z":"e3f06e9735d32e5d","d":true,"name":"Threshold Changer","info":"","x":230,"y":1460,"wires":[]},{"id":"79468e9a23a59076","type":"comment","z":"e3f06e9735d32e5d","d":true,"name":"Light Threshold Changer","info":"","x":270,"y":1520,"wires":[]},{"id":"751c847a8f90fd44","type":"comment","z":"e3f06e9735d32e5d","name":"Projet CLSPWC - Groupe 7 - 2024/2045","info":"","x":190,"y":60,"wires":[]},{"id":"c61477dda10cb7f6","type":"ui_text","z":"e3f06e9735d32e5d","d":true,"group":"583925e9774bb5c8","order":1,"width":14,"height":1,"name":"","label":"Night < Unknown < Morning","format":"","layout":"col-center","className":"","style":true,"font":"","fontSize":"19","color":"#ffffff","x":840,"y":1580,"wires":[]},{"id":"adb14b55692f5f9c","type":"inject","z":"e3f06e9735d32e5d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":300,"wires":[["ae40665c625eec0e"]]},{"id":"ae40665c625eec0e","type":"function","z":"e3f06e9735d32e5d","name":"function recuperation light","func":"msg.query = 'from(bucket: \"testBD\")\\\n    |> range(start: -1m)\\\n    |> filter(fn: (r) => r._measurement == \"testlight2\")\\\n    |> last()';\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":300,"wires":[["12c3b2210f278ace"]]},{"id":"12c3b2210f278ace","type":"influxdb in","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"StevenEssam","x":650,"y":300,"wires":[["8430d01bc2ec87ea"]]},{"id":"37e9d039ee35b50d","type":"function","z":"e3f06e9735d32e5d","name":"function light","func":"msg.payload = Number(msg.payload._value);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":280,"wires":[["0ee00a9fc75704e7"]]},{"id":"741ca69504a5f3a0","type":"function","z":"e3f06e9735d32e5d","name":"function time of day","func":"// Récupérer la valeur de lumière depuis InfluxDB (msg.payload._value contient la valeur de lumière)\nlet lightValue = Number(msg.payload._value);  // Convertir la valeur en nombre\n\n// Appliquer les seuils fixes pour déterminer le moment de la journée\nif (lightValue > 300) {\n    msg.payload = \"morning\";  // Matin si lumière > 300\n} else if (lightValue >= 100 && lightValue <= 300) {\n    msg.payload = \"unknown\";  // Inconnu si lumière entre 100 et 300\n} else if (lightValue < 100) {\n    msg.payload = \"night\";  // Nuit si lumière < 100\n}\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1030,"y":320,"wires":[["daa36ac0340cc62f","3495c529eedab969","874c7558426dc0b3"]]},{"id":"8430d01bc2ec87ea","type":"split","z":"e3f06e9735d32e5d","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":830,"y":300,"wires":[["37e9d039ee35b50d","741ca69504a5f3a0"]]},{"id":"8a8006c7f3f2339a","type":"inject","z":"e3f06e9735d32e5d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":560,"wires":[["eb33fed1a81c6981"]]},{"id":"eb33fed1a81c6981","type":"function","z":"e3f06e9735d32e5d","name":"function recuperation gps lat et lon","func":"msg.query = 'from(bucket: \"testBD\")\\\n    |> range(start: -1m)\\\n    |> filter(fn: (r) => r._measurement == \"testgps2\")\\\n    |> filter(fn: (r) => r._field == \"lat\" or r._field == \"lon\")\\\n    |> last()';\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":560,"wires":[["61cbe3a1150bd701"]]},{"id":"61cbe3a1150bd701","type":"influxdb in","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"StevenEssam","x":730,"y":560,"wires":[["df23b152cee15a02"]]},{"id":"3fa53ec9b8296a34","type":"function","z":"e3f06e9735d32e5d","name":"function recuperation speed","func":"msg.query = 'from(bucket: \"testBD\")\\\n    |> range(start: -1m)\\\n    |> filter(fn: (r) => r._measurement == \"testgps2\")\\\n    |> filter(fn: (r) => r._field == \"value\")\\\n    |> last()';\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":700,"wires":[["1155f0c4a413ef3e"]]},{"id":"df23b152cee15a02","type":"function","z":"e3f06e9735d32e5d","name":"display lon + lat","func":"let lat = 0;\nlet lon = 0;\n\n// Si msg.payload est un tableau\nif (Array.isArray(msg.payload)) {\n    msg.payload.forEach(point => {\n        if (point._field === \"lat\") {\n            lat = Number(point._value);\n        } else if (point._field === \"lon\") {\n            lon = Number(point._value);\n        }\n    });\n}\n\n// Récupérer les anciennes valeurs stockées dans le contexte de flux\nlet oldLat = flow.get('oldLat');  // Valeur ancienne de latitude\nlet oldLon = flow.get('oldLon');  // Valeur ancienne de longitude\nlet lastSendTime = flow.get('lastSendTime'); // Temps du dernier envoi\n\n// Initialiser si ce n'est pas défini\nif (oldLat === undefined) {\n    oldLat = lat; // A l'initialisation, on garde la valeur actuelle\n    flow.set('oldLat', oldLat);\n}\n\nif (oldLon === undefined) {\n    oldLon = lon; // A l'initialisation, on garde la valeur actuelle\n    flow.set('oldLon', oldLon);\n}\n\n// Vérification de l'heure actuelle\nlet currentTime = new Date().getTime();\n\n// Vérifier si 10 secondes se sont écoulées depuis le dernier envoi\nif (lastSendTime === undefined || (currentTime - lastSendTime >= 10000)) {\n    // Envoyer les données si elles ne sont pas nulles\n    if (lat !== 0 && lon !== 0) {\n        // Mettre à jour les anciennes valeurs et le temps du dernier envoi dans le contexte de flux\n        flow.set('oldLat', lat);\n        flow.set('oldLon', lon);\n        flow.set('lastSendTime', currentTime); // Met à jour le dernier envoi\n\n        // Préparer le message à envoyer à la carte\n        msg.payload = {\n            lat: lat,\n            lon: lon,\n            name: \"MyDevice\"\n        };\n\n        return msg; // Envoyer le message\n    }\n} else if (lat !== oldLat || lon !== oldLon) {\n    // Si les valeurs ont changé et ne sont pas nulles\n    if (lat !== 0 && lon !== 0) {\n        // Mettre à jour les anciennes valeurs et le temps du dernier envoi\n        flow.set('oldLat', lat);\n        flow.set('oldLon', lon);\n        flow.set('lastSendTime', currentTime); // Met à jour le dernier envoi\n\n        // Préparer le message à envoyer à la carte\n        msg.payload = {\n            lat: lat,\n            lon: lon,\n            name: \"MyDevice\"\n        };\n\n        return msg; // Envoyer le message\n    }\n}\n\n// Si aucune condition de renvoi n'est remplie, on retourne null\nreturn null;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":560,"wires":[["432edb2e80efa19b","a3e509bc36a7de37","ded14174eecdca48"]]},{"id":"e11f08d5d9fb4489","type":"function","z":"e3f06e9735d32e5d","name":"display speed","func":"// Vérifie que msg.payload contient des données\nif (msg.payload && Array.isArray(msg.payload) && msg.payload.length > 0) {\n    // Récupérer la dernière valeur de vitesse\n    let lastSpeed = Number(msg.payload[0]._value); // Convertir la valeur en nombre\n\n    // Préparer le message pour l'afficher dans le debug\n    msg.payload = { lastSpeed: lastSpeed };\n\n    return msg; // Retourne le message avec la dernière vitesse\n}\n\n// Si aucune donnée n'est trouvée, on retourne null\nreturn null;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":700,"wires":[["99545f9202279ccd"]]},{"id":"2094d28f72b114d0","type":"inject","z":"e3f06e9735d32e5d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":960,"wires":[["056e6c9c74bce1d1"]]},{"id":"056e6c9c74bce1d1","type":"function","z":"e3f06e9735d32e5d","name":"function recuperation X + Y + Z","func":"msg.query = 'from(bucket: \"testBD\")\\\n    |> range(start: -1h)\\\n    |> filter(fn: (r) => r._measurement == \"testAccelometre2\")\\\n    |> filter(fn: (r) => r._field == \"xAccel\" or r._field == \"yAccel\" or r._field == \"zAccel\")\\\n    |> last()';\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":960,"wires":[["958ba9f50d41e267"]]},{"id":"958ba9f50d41e267","type":"influxdb in","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"StevenEssam","x":770,"y":960,"wires":[["3eba1dc65230b594"]]},{"id":"3eba1dc65230b594","type":"function","z":"e3f06e9735d32e5d","name":"Display Accel","func":"// Initialisation des variables\nlet xAccel = null;\nlet yAccel = null;\nlet zAccel = null;\n\n// Vérification que msg.payload n'est pas vide et que c'est un tableau\nif (Array.isArray(msg.payload)) {\n    msg.payload.forEach(point => {\n        // Vérifier le champ pour chaque point et attribuer la valeur correspondante\n        if (point._field === \"xAccel\") {\n            xAccel = Number(point._value);\n        } else if (point._field === \"yAccel\") {\n            yAccel = Number(point._value);\n        } else if (point._field === \"zAccel\") {\n            zAccel = Number(point._value);\n        }\n    });\n}\n\n// Créer un message pour chaque axe d'accélération\nvar msg1 = { topic: \"xAccel\", payload: xAccel };\nvar msg2 = { topic: \"yAccel\", payload: yAccel };\nvar msg3 = { topic: \"zAccel\", payload: zAccel };\n\n// Retourner les messages sous forme de tableau\nreturn [[msg1, msg2, msg3]];\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1050,"y":960,"wires":[["8206fcf964652fa4"]]},{"id":"553682e7900837c0","type":"inject","z":"e3f06e9735d32e5d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":1240,"wires":[["cf8c31797206ef5d"]]},{"id":"cf8c31797206ef5d","type":"function","z":"e3f06e9735d32e5d","name":"function recuperation light","func":"msg.query = 'from(bucket: \"testBD\")\\\n    |> range(start: -1h)\\\n    |> filter(fn: (r) => r._measurement == \"testAlert2\")\\\n    |> sort(columns: [\"_time\"], desc: true)';\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":1240,"wires":[["f7ee709f18b75916"]]},{"id":"f7ee709f18b75916","type":"influxdb in","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"StevenEssam","x":650,"y":1240,"wires":[["9541287cf4f510b7","424d2e4e10760479","d5ee408aba98eeac"]]},{"id":"9541287cf4f510b7","type":"function","z":"e3f06e9735d32e5d","name":"Display alert in table","func":"let messages = [];\n\n// Vérifier que msg.payload contient un tableau d'objets\nif (Array.isArray(msg.payload)) {\n    msg.payload.forEach(point => {\n        if (point._field === \"alertMessage\") {\n            messages.push({\n                alertMessage: point._value,  // Le message d'alerte réel\n                timestamp: new Date(point._time).toLocaleString()  // L'horodatage du message\n            });\n        }\n    });\n}\n\n// Ne pas inverser ici car la requête InfluxDB trie déjà par ordre décroissant\nmsg.payload = messages;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":1200,"wires":[["f8bd97143f13a8df"]]},{"id":"d5ee408aba98eeac","type":"function","z":"e3f06e9735d32e5d","name":"display alert led","func":"// Récupérer le dernier timestamp stocké dans le contexte\nlet lastTimestamp = context.get('lastTimestamp') || null; // Initialise lastTimestamp à null si aucun timestamp n'est stocké\nlet currentTimestamp = null;\n\n// Vérifier que msg.payload contient le dernier timestamp\nif (msg.payload && Array.isArray(msg.payload) && msg.payload.length > 0) {\n    // Prendre le dernier timestamp reçu\n    currentTimestamp = msg.payload[0]._time; // Assurez-vous que c'est la bonne clé pour accéder à la valeur\n}\n\n// Comparer le timestamp actuel avec le dernier timestamp connu\nif (currentTimestamp !== null && currentTimestamp !== lastTimestamp) { // Vérifie que currentTimestamp n'est pas null\n    // Si le timestamp a changé, commencer à clignoter la LED\n    if (lastTimestamp !== null) { // Vérifier que ce n'est pas le premier déploiement\n        let blinkDuration = 10000; // Durée totale du clignotement en ms\n        let blinkInterval = 500;    // Intervalle entre les clignotements en ms\n        let blinkCount = 0;\n\n        let intervalId = setInterval(() => {\n            msg.payload = (blinkCount % 2 === 0) ? \"yellow\" : \"red\"; // Alterne entre \"yellow\" et \"red\"\n            node.send({ payload: msg.payload }); // Envoyer le signal pour changer la couleur de la LED\n            blinkCount++;\n\n            if (blinkCount * blinkInterval >= blinkDuration) {\n                clearInterval(intervalId); // Arrêter le clignotement\n                node.send({ payload: true }); // Indiquer que le clignotement est terminé\n            }\n        }, blinkInterval);\n    }\n\n    // Mettre à jour le dernier timestamp\n    context.set('lastTimestamp', currentTimestamp); // Mettre à jour le dernier timestamp\n\n} else {\n    msg.payload = true; // Si le timestamp n'a pas changé ou si currentTimestamp est null\n}\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":1240,"wires":[["b1ecefb4e3c9602c"]]},{"id":"424d2e4e10760479","type":"function","z":"e3f06e9735d32e5d","name":"display alert message","func":"// Récupérer le dernier timestamp stocké dans le contexte\nlet lastTimestamp = context.get('lastTimestamp') || null; \nlet currentTimestamp = null;\n\n// Vérifier que msg.payload contient le dernier timestamp\nif (msg.payload && Array.isArray(msg.payload) && msg.payload.length > 0) {\n    currentTimestamp = msg.payload[0]._time; // On récupère le timestamp du dernier message\n}\n\n// Vérifier si le timestamp actuel est différent du dernier timestamp\nif (currentTimestamp !== null && currentTimestamp !== lastTimestamp) {\n    if (lastTimestamp !== null) {\n        // Affichage de l'alerte dans un nœud de texte\n        let blinkDuration = 10000; // Durée totale du clignotement en ms\n        let blinkInterval = 500;    // Intervalle entre les clignotements en ms\n        let blinkCountText = 0;     // Compteur pour le nombre de clignotements du texte\n\n        // Utilisation d'un nouvel intervalle pour le clignotement du texte\n        let intervalIdText = setInterval(() => {\n            if (blinkCountText % 2 === 0) {\n                msg.payload = \"⚠️ Alert Detected ⚠️\"; // Montrer le message d'alerte\n            } else {\n                msg.payload = \"\"; // Cacher le message d'alerte\n            }\n\n            node.send(msg); // Envoyer le message mis à jour au nœud de texte\n            blinkCountText++;\n\n            // Arrêter le clignotement du texte\n            if (blinkCountText * blinkInterval >= blinkDuration) {\n                clearInterval(intervalIdText); // Arrêter le clignotement du texte\n                msg.payload = \"\"; // Effacer le texte après le clignotement\n                node.send(msg); // Envoyer le dernier message vide pour effacer\n            }\n        }, blinkInterval);\n    }\n\n    // Mettre à jour le dernier timestamp\n    context.set('lastTimestamp', currentTimestamp); \n} else {\n    // Ne rien envoyer si le timestamp n'a pas changé\n    return null; // Retourner null pour ne rien envoyer\n}\n\n// Retourner un message vide au départ pour éviter le JSON\nreturn null; \n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":1280,"wires":[["a492a5b16897d4c6"]]},{"id":"1c7d32e67e2579ed","type":"inject","z":"e3f06e9735d32e5d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":700,"wires":[["3fa53ec9b8296a34"]]},{"id":"1155f0c4a413ef3e","type":"influxdb in","z":"e3f06e9735d32e5d","influxdb":"5ba7f60809348175","name":"","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"StevenEssam","x":730,"y":700,"wires":[["e11f08d5d9fb4489"]]},{"id":"671f32761e633a3e","type":"comment","z":"e3f06e9735d32e5d","name":"Light","info":"","x":90,"y":140,"wires":[]},{"id":"96a198555a290ac6","type":"comment","z":"e3f06e9735d32e5d","name":"GPS","info":"","x":90,"y":380,"wires":[]},{"id":"a8e65b4ce59997c7","type":"comment","z":"e3f06e9735d32e5d","name":"Speed","info":"","x":90,"y":640,"wires":[]},{"id":"0009e152208793c7","type":"comment","z":"e3f06e9735d32e5d","name":"Accelerometer","info":"","x":110,"y":800,"wires":[]},{"id":"3531c82759fda669","type":"comment","z":"e3f06e9735d32e5d","name":"Alert Message","info":"","x":110,"y":1060,"wires":[]}]